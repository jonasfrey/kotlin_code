
// this file was generated by create_new_folder_project.js

package type_any

import kotlin_helpers.*
import kotlin.text.toLowerCase
import kotlin.text.lowercase

fun <T>print_array_size_from_other_scope(param : Any, param2: Array<Int>, param3 : T){

    //println(param.size) // not working

    println(param2.size)
    // println(param3.size)

    println(param::class)
    println(param::class.toString())

    // for (prop in param::class.) {
    //     println(prop)
    // }  

    for (x in param2) {
        println(x)
      }

      if(param3 is Array<*>) {
        println(param3.size)
        for (items in param3) {
            println(items)
        }
    }
    // not working 
    // for (x in param3) {
    //     println(x)
    // }

    println(param2::class)

    println(param3)
}

fun array_size_property_not_available_if_type_is_any(arg: Any){
    
    if(arg::class.simpleName.toString().lowercase().contains("array")){
        // arg is array
        
        //      println(arg.size) //still not working
    }

    //this will work 

    // if(arg is Array<T>){ //not working
    // if(arg is Array<Any>){ //not working

    if(arg is Array<*>){   // working
        println(arg.size)
    }

}

fun print_array_size_from_other_scope_array(arg : Array<Int>){

    println(arg.size) // not working

}

fun main() {

    val arr = Array(5) { i -> i}
    println(arr.toString())
    println(arr.size) 

    // print_array_size_from_other_scope(arr)  // error unresolved reference size 

    print_array_size_from_other_scope(arr, arr, arr)
    
    array_size_property_not_available_if_type_is_any(arr)


    println("main function  was executed")
}
