
// this file was generated by create_new_folder_project.js

package interfaces_lesson

import kotlin_helpers.*

fun main() {
    println("main function  was executed")

}



// in java an interface is a blueprint for a class 

// interface Class_iface(){} // error: an interface may not have a constructor


interface Class_iface{}


class Point_2_d(var x: Int, var y: Int){

}

interface Game_object{
    
    // the initial frames to live
    val n_frames_to_live_initial : Int // abstract
    
    // frames to live that get count down every frame
    var n_frames_to_live_current : Int = n_frames_to_live_initial

    var o_point_2_d : Point_2_d
    //will get called every frame
    fun render_function()

    // will get called 
    fun key_event_function(a_keysdown: MutableList)

}


class Snake_head: Game_object(){

    override var n_frames_to_live_initial = -1 // using negative to represent infinity

    override o_point_2_d = Point_2_d(0,0)

    var n_velocity_x = 1
    var n_velocity_y = 0

    override fun render_function(){

        o_point_2_d.x += n_velocity_x
        o_point_2_d.y += n_velocity_y
    }
}